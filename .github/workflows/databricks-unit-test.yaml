name: Run Unit Tests in Databricks Workflows

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - "main"
    paths-ignore:
      - "terraform/**"
      - ".github/**"
      - "README.md"

jobs:
  update_databricks_job_and_run_unit_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: install-databricks-cli
        uses: databricks/setup-cli@main

      - name: update Databricks Job
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_PAT }}
        run: |
          branch_name=${{ github.ref_name }}
          repo_url=${{ vars.REPO_URL }}
          unit_test_job_id=${{ vars.UNIT_TEST_JOB_ID }}
          existing_cluster_id=${{ vars.DATABRICKS.EXISTING_CLUSTER_ID }}
          git_provider="github"

          tasks=()
          for notebook in tests/unit-notebooks/*; do
            notebook_path="${notebook}"
            task_key="unit_test_$(basename -s .py $notebook)"
            tasks+=("{\"notebook_task\": {\"notebook_path\": \"$notebook_path\"}, \"task_key\": \"$task_key\", \"existing_cluster_id\": \"$existing_cluster_id\"}")
          done

          tasks_string=$(IFS=','; echo "${tasks[*]}")

          job_reset_json="{\"job_id\": $unit_test_job_id, \"new_settings\": {\"tasks\": [$tasks_string], \"git_source\": {\"git_provider\" : \"$git_provider\", \"git_url\": \"$repo_url\", \"git_branch\": \"$branch_name\"}}}"
          databricks jobs reset --json "$job_reset_json"